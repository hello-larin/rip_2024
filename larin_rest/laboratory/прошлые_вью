class ProductsList(APIView):
    model_class = LaboratoryItem
    serializer_class = ProductSerializer

    # Возвращает список акций
    def get(self, request, format=None):
        products = self.model_class.objects.all()
        serializer = self.serializer_class(products, many=True)
        return Response(serializer.data)

    # Добавляет новую акцию
    def post(self, request, format=None):
        serializer = self.serializer_class(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

class ProductDetail(APIView):
    model_class = LaboratoryItem
    serializer_class = ProductSerializer

    # Возвращает информацию об акции
    def get(self, request, id, format=None):
        stock = get_object_or_404(self.model_class, id=id)
        serializer = self.serializer_class(stock)
        return Response(serializer.data)

    # Обновляет информацию об акции (для модератора)
    def put(self, request, id, format=None):
        stock = get_object_or_404(self.model_class, id=id)
        serializer = self.serializer_class(stock, data=request.data, partial=True)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)

    # Удаляет информацию об акции
    def delete(self, request, id, format=None):
        stock = get_object_or_404(self.model_class, id=id)
        stock.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)